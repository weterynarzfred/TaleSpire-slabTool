export default {
  addSlab: <><h3>Add a slab</h3><p>Adds a slab to the existing layout.</p></>,
  addDuplicate: <><h3>Duplicate layout</h3><p>Duplicates the existing layout a set number of times, applying modifiers to each copy.</p></>,
  addOffset: <><h3>Offset layout</h3><p>Offsets the existing layout by the specified amount. Keep in mind that the end result is always normalized to have only positive position values.</p></>,
  addRotate: <><h3>Rotate layout</h3><p>Rotates the existing layout by the specified amount.</p></>,
  addScale: <><h3>Scale layout</h3><p>Scales <strong>the relative positions of</strong> the objects. The objects themselves cannot be scaled.</p></>,
  addReplace: <><h3>Replace assets</h3><p>Replaces the specified assets with a different asset or a slab.</p></>,
  addFilter: <><h3>Filter assets</h3><p>Filters the specified assets and either deletes them or applies the sub-modifiers to them.</p></>,

  duplicate_count: <><h3>Duplicates count</h3><p>Amount of times the above layout is duplicated by.</p></>,
  duplicate_modifiers: "",
  duplicate_modifiersRelativeOption: <><h3>Relative</h3><p>Adds all selected modifiers to each next duplicate.</p><p><i style={{ color: "#dff" }}>For example, if used with Rotate modifier specified as <b style={{ color: "#f55" }}>15</b> degrees it will rotate first duplicate by <b>15</b> degrees, second duplicate by <b>30</b> degrees and so on.</i></p></>,
  duplicate_modifiersAbsoluteOption: <><h3>Absolute</h3><p>Sets all selected modifiers to every duplicate object as specified.</p><p><i style={{ color: "#dff" }}>For example, if used with Rotate modifier specified as <b style={{ color: "#f55" }}>15</b> degrees it will rotate every duplicate by <b>15</b> degrees.</i></p></>,

  filter_fraction: <><h3>Filter fraction</h3><p>A fraction of selected object (prop or tile) in the UUID below that will be changed.</p></>,
  filter_uuid: <>If not empty, selects only objects with the specified UUID.</>,
  filter_minDistance: <><h3>Minimum distance</h3>If above zero, selects only objects closer to each other than the given value.</>,
  filter_deleteSelected: <><h3>Delete selected</h3><p>Deletes selected objects.</p></>,

  offset_x: <><h3>Offset X</h3><p>Offsets the object by specified value in horizontal axis (left or right).</p></>,
  offset_y: <><h3>Offset Y</h3><p>Offsets the object by specified value in vertical axis (up or down).</p></>,
  offset_z: <><h3>Offset Z</h3><p>Offsets the object by specified value in depth axis (forward or backward).</p></>,
  offset_isRandom: <><h3>Random offset</h3><p>If selected, the offset will be randomised by value between the specified offset in the given axis and it's negative value.</p><p><i style={{ color: "#dff" }}>For example if given offset <b style={{ color: "#f55" }}>1</b> it will randomise between <b>-1</b> and <b>1</b></i></p></>,

  replace_from: "",
  replace_fromAllOption: <>Replace all objects.</>,
  replace_fromUuidOption: <>Replace objects with a specified UUID.</>,
  replace_fromUuid: <><p>Specify the UUID of the object you want to replace.</p><p><i>You can use the Eyedropper Tool on the right as well.</i></p></>,
  replace_to: "",
  replace_toUuidOption: <>Change to an object with the specified UUID.</>,
  replace_toSlabOption: <>Change to a specified slab.</>,
  replace_toUuid: <><p>Specify the UUID of the replacement object.</p><p><i>You can use the Eyedropper Tool on the right as well.</i></p></>,
  replace_toSlab: <>Paste the slab you wish to change the objects to.</>,

  rotate_axis: <><h3>Rotate axis</h3><p>Select the axis around which to rotate the objects.</p></>,
  rotate_axisXOption: "",
  rotate_axisYOption: "",
  rotate_axisZOption: "",
  rotate_center: "",
  rotate_centerZeroOption: <>placeholder tooltip</>,
  rotate_centerCenterOption: <>placeholder tooltip</>,
  rotate_type: "",
  rotate_typeDegreeOption: <><h3>Degree</h3>Rotate by specified amount of degrees.</>,
  rotate_typeVariationOption: <><h3>Variation</h3><p>Input all rotation variations from which the tool will randomly select the option to rotate the object by.</p><p><i style={{ color: "#dff" }}>For example if given option <b style={{ color: "#f55" }}>15 30 45</b> it will randomly rotate the object either by <b>15</b> degrees, <b>30</b> degrees or <b>45</b> degrees.</i></p></>,
  rotate_typeRandomOption: <><h3>Random</h3>Rotate by a random amount of degrees between two specified values.</>,
  rotate_rotation: <>Specify amount of degrees to rotate by.</>,
  rotate_rotationVariations: <><p>Specify variation of degrees to rotate by.</p><p><i>Recognised separators: <b style={{ color: "#f55" }}>&nbsp;&nbsp;space &nbsp;&nbsp;&nbsp;, &nbsp;&nbsp;&nbsp;;</b></i></p></>,
  rotate_rotationFrom: <>Specify amount of degrees to rotate by.</>,
  rotate_rotationTo: <>Specify amount of degrees to rotate by.</>,
  rotate_elementsOnly: <><h3>Elements only</h3><p>If selected, all the objects (prop or tile) in the layout above will only rotate around their own center without rotating the entire slab.</p></>,
  rotate_offset_x: <><h3>Axis offset X</h3><p>Offsets the rotation around the axis by specified value in horizontal axis (left or right).</p><p><i style={{ color: "#dff" }}>For example, if given value <b style={{ color: "#f55" }}>5</b> it will rotate the objects around a specified axis with a radius of <b>5</b>.</i></p></>,
  rotate_offset_y: <><h3>Axis offset Y</h3><p>Offsets the rotation around the axis by specified value in vertical axis (up or down).</p><p><i style={{ color: "#dff" }}>For example, if given value <b style={{ color: "#f55" }}>5</b> it will rotate the objects around a specified axis with a radius of <b>5</b>.</i></p></>,
  rotate_offset_z: <><h3>Axis offset Z</h3><p>Offsets the rotation around the axis by specified value in depth axis (forward or backward).</p><p><i style={{ color: "#dff" }}>For example, if given value <b style={{ color: "#f55" }}>5</b> it will rotate the objects around a specified axis with a radius of <b>5</b>.</i></p></>,

  scale_center: "",
  scale_centerZeroOption: <>placeholder tooltip</>,
  scale_centerCenterOption: <>placeholder tooltip</>,
  scale_scale_x: <><h3>Scale X</h3><p>Scale the layout by specified value in horizontal axis (left or right).</p></>,
  scale_scale_y: <><h3>Scale Y</h3><p>Scale the layout by specified value in vertical axis (up or down).</p></>,
  scale_scale_z: <><h3>Scale Z</h3><p>Scale the layout by specified value in depth axis (forward or backward).</p></>,
  scale_offset_x: <><h3>Offset X</h3><p>Offsets the layout by specified value in horizontal axis (left or right).</p><p><i style={{ color: "#dff" }}>For example, if given value <b style={{ color: "#f55" }}>2</b> it will offset the objects to the right by <b>2</b>.</i></p></>,
  scale_offset_y: <><h3>Offset Y</h3><p>Offsets the layout by specified value in vertical axis (up or down).</p><p><i style={{ color: "#dff" }}>For example, if given value <b style={{ color: "#f55" }}>2</b> it will raise the objects by <b>2</b>.</i></p></>,
  scale_offset_z: <><h3>Offset Z</h3><p>Offsets the layout by specified value in depth axis (forward or backward).</p><p><i style={{ color: "#dff" }}>For example, if given value <b style={{ color: "#f55" }}>2</b> it will offset the objects forward by <b>2</b>.</i></p></>,

  slab_json: <><p>Breakdown of the Base64 code on the left for easier visualisation of all components.</p><p>Can be edited directly in the field to change object UUID, it's position and rotation.</p><p><i><b style={{ color: "#f55" }}>Needs to have a specified structure.</b></i></p></>,
  slab_base64: <><p>Base64 code that Talespire uses for it's building blocks.</p><p>You can copy from and paste to this field directly.</p></>,
  slab_copyButton: <><p>Place the slab from the field below in your hand. It will also be copied to clipboard so you can paste it later on if you wish.</p><p><i><b style={{ color: "#f55" }}>It will clear any other things that have been copied or cut previously.</b></i></p></>,
  slab_eyedropperButton: <><h3>Eyedropper Tool</h3><p>Select the object (prop or tile) in Talespire to automatically get the UUID of the object in the field below.</p><p><i>Only works if used in a Symbiote version of the tool inside Talespire.</i></p><p><i><b style={{ color: "#f55" }}>It will break if a mini is selected.</b></i></p></>,
};
